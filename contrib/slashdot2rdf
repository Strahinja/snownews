#!/usr/bin/perl

# Fix for Slashdot stuff
# NO MAINTAINER
# NO LICENSE (claims GPLv2)
# UNTESTED AS OF 2017
# Instructions:

use Date::Parse;
use Date::Format;

@lines = <>;

print "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n\n".
    "<rdf:RDF\n".
    "  xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n".
    "  xmlns=\"http://purl.org/rss/1.0/\"\n".
    "  xmlns:dc=\"http://purl.org/dc/elements/1.1/\"\n".
    "  xmlns:slash=\"http://purl.org/rss/1.0/modules/slash/\"\n".
    "  xmlns:taxo=\"http://purl.org/rss/1.0/modules/taxonomy/\"\n".
    "  xmlns:admin=\"http://webns.net/mvcb/\"\n".
    "  xmlns:syn=\"http://purl.org/rss/1.0/modules/syndication/\">\n".
    "<channel rdf:about=\"http://slashdot.org/\">\n".
    "  <title>Slashdot</title>\n".
    "  <link>http://slashdot.org/</link>\n".
    "  <description>News for nerds, stuff that matters</description>\n".
    "  <dc:language>en</dc:language>\n".
    "  <dc:rights>Copyright 1997-2004, OSDN - Open Source Development Network,Inc.  All Rights Reserved.</dc:rights>\n".
    "  <dc:date>2004-06-01T12:13:52+00:00</dc:date>\n".
    "  <dc:publisher>OSDN</dc:publisher>\n".
    "  <dc:creator>pater\@slashdot.org</dc:creator>\n".
    "  <dc:subject>Technology</dc:subject>\n".
    "  <syn:updatePeriod>hourly</syn:updatePeriod>\n".
    "  <syn:updateFrequency>1</syn:updateFrequency>\n".
    "  <syn:updateBase>1970-01-01T00:00+00:00</syn:updateBase>\n".
    "  <image rdf:resource=\"http://images.slashdot.org/topics/topicslashdot.gif\" />\n".
    "  <textinput rdf:resource=\"http://slashdot.org/search.pl\" />\n".
    "</channel>\n\n".
    "<image rdf:about=\"http://images.slashdot.org/topics/topicslashdot.gif\">\n".
    "<title>Slashdot</title>\n".
    "<url>http://images.slashdot.org/topics/topicslashdot.gif</url>\n".
    "<link>http://slashdot.org/</link>\n".
    "</image>\n\n";

foreach (@lines) {
    chomp;
    $count++;
    if ($_ eq "\tWIDTH=\"13\" HEIGHT=\"16\" ALT=\"\" ALIGN=\"TOP\"><FONT") {
        $found = 1;
        next;
    }
    if ($found == 1) {
        # Inside article section now
        if (/<A HREF=\"\/\/.*\.slashdot\.org\/\">/) {
            /FONT COLOR=\"#FFFFFF\">(.*)<\/FONT><\/A>(.*)<\/B>/;
            $headline = $1.$2
        } else {
            /<B>(.*)<\/B>/;
            $headline = $1
        }
        $section = 'articles';
        if (/HREF="\/\/([^\.]+).slashdot.org\/"/) {
            $section = $1;
        }
        $found++;
        next;
    }
    if (($found > 1) && ($found < 21)) {
        # Extract additional metadata

        if (m/topics\/topic([^\.]+)\.gif/) {
            $subject = $1;
        } elsif (m/^<A HREF="[^"]+">([^<]+)<\/A>$/) {
            $creator = $1;
        } elsif (m/<B>from the (.+) dept\.<\/B>/) {
            $dept = $1;
        } elsif (m/on \w+ (\w+ \d{1,2}), @([0-9:]{5}(?:AM|PM))<\/B>/) {
            # Only works for the default timezone and display!
            $date = str2time("$1 $2", "est");
            $date = time2str("%Y-%m-%dT%H:%M:%S+00:00", $date, "gmt");
        } elsif (m/^<\/TD><\/TR><\/TABLE>/ && !$subject) {
            # Early end to topic images; increment found to compensate
            $found += 9;
        }

        $found++;
        next;
    }
    if ($found == 21) {
        # In theory we've now hit the line with description and link
        $main = $_;
        $found++;
        $insidemain = 1;
        next;
    }
    if ($found > 20) {
        if (m/<B>Read More...<\/B>/i) {
            $link = "http:".(split(/\"/,$_))[1];
            $link = (split(/&/,$link))[0];
            $found = 0;

            $main =~ s/HREF="\/\//HREF="http:\/\//g;
            $main =~ s/&/&amp;/g;
            $main =~ s/</&lt;/g;
            $main =~ s/>/&gt;/g;
            $main =~ s/\"/&quot;/g;
            $main =~ s/\'/&apos;/g;
            $main =~ s/\r/\n/g;

            $headline =~ s/&/&amp;/g;

            print "<item rdf:about=\"$link\">\n".
                  "<title>$headline</title>\n".
                  "<link>$link</link>\n".
                  "<description>$main</description>\n".
                  "<dc:creator>$creator</dc:creator>\n".
                  "<dc:subject>$subject</dc:subject>\n".
                  "<dc:date>$date</dc:date>\n".
                  "<slash:department>$dept</slash:department>\n".
                  "<slash:section>$section</slash:section>\n".
                   "</item>\n\n";

            # These should be emptied because they should not be carried over
            # to the next article, where they may stay empty.
            $link = '';
            $headline = '';
            $main = '';
            $creator = '';
            $subject = '';
            $date = '';
            $dept = '';
            $section = '';
        } elsif ($insidemain) {
            if (m/<P>/) {
                $insidemain = 0;
            } else {
                s/<\/?i>//g;
                $main .= $_;
            }
        }
    }
}

print "<textinput rdf:about=\"http://slashdot.org/search.pl\">\n".
      "<title>Search Slashdot</title>\n".
      "<description>Search Slashdot stories</description>\n".
      "<name>query</name>\n".
      "<link>http://slashdot.org/search.pl</link>\n".
      "</textinput>\n".
      "</rdf:RDF>\n";

