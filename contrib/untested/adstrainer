#!/usr/bin/env python

# Copyright (c) 2005 Aggelos Orfanakos <csst0266@cs.uoi.gr>
#
# Permission is hereby granted, free of charge, to any person obtaining a copy of
# this software and associated documentation files (the "Software"), to deal in
# the Software without restriction, including without limitation the rights to
# use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
# the Software, and to permit persons to whom the Software is furnished to do so,
# subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
# FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
# COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
# IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
# CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

# This is a general blocker filter.
# UNTESTED AS OF 2017
# MAINTAINER UNREACHABLE
# Instructions: 

"""
An ad-blocking conversion filter for the Liferea news aggregator.

Input (feed content) is read from standard input (stdin) and output (filtered
feed content) is written to standard output (stdout). The filter accepts a
single command-line argument which should consist of a comma-separated list of
keywords. Each hyperlink in the feed is matched against each keyword; if the
match is found to be positive, the hyperlink is filtered (removed).
"""

__name__ = 'adstrainer'
__version__ = '0.1'
__date__ = 'Thu, 17 Nov 2005'
__author__ = 'Aggelos Orfanakos <csst0266atcsdotuoidotgr>'

from sys import argv, stdin, stdout

import re

keywords = argv[1].split(',')

def filter(match):
    href = match.group(2)

    for keyword in keywords:
        if keyword in href:
            return ''

    return match.group()

content = stdin.read()

content = re.compile('(<|&lt;)a .*?href="?([^"]+)"?.*?(>|&gt;).+?(<|&lt;)/a(>|&gt;)', re.DOTALL).sub(filter, content)

stdout.write(content)

